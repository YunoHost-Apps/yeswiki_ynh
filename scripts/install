#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

ynh_app_setting_set --key=php_upload_max_filesize --value=500M

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_phpfpm

ynh_config_add_nginx

#=================================================
# INSTALL COMPOSER DEPENDENCIES
#=================================================
ynh_script_progression "Installing composer dependencies..."

ynh_composer_install
ynh_composer_exec install --no-dev

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression "Finalizing installation..."

admin_temp_pass=$(ynh_string_random --length=20)

wiki_name_escaped=$(echo "$wiki_name" | sed 's/ /%20/g')

if [ "${wikimodel}" = "CLIC" ]; then
  # Replace default YesWiki model with CLIC model
  mv $install_dir/setup/sql/default-content.sql $install_dir/setup/sql/default-content.sql.original
  cp ../conf/CLIC/default-content.sql $install_dir/setup/sql/default-content.sql
fi

ynh_local_curl "/?PagePrincipale&installAction=install" "config[default_language]=$language" "config[wakka_name]=$wiki_name_escaped" \
  "config[root_page]=PagePrincipale" "config[mysql_host]=localhost" \
  "config[mysql_database]=$app" "config[mysql_user]=$db_user" "config[mysql_password]=$db_pwd" "config[table_prefix]=yeswiki_" \
  "admin_name=$admin" "admin_password=$admin_temp_pass" "admin_password_conf=$admin_temp_pass" \
  "admin_email=$admin%40$domain" "config[allow_robots]=$allow_robots" "config[allow_raw_html]=1" "submit=Continue"

if [ "${wikimodel}" = "CLIC" ]; then
  # restore original YesWiki model
  mv -f $install_dir/setup/sql/default-content.sql.original $install_dir/setup/sql/default-content.sql
fi

#=================================================
# DOWNLOAD AND CONFIGURE IMPORTER PLUGIN
#=================================================
ynh_script_progression "Configure importer plugin"

# Download importer plugin from YesWiki repository
mkdir -p "$install_dir/tools/importer"
ynh_setup_source --dest_dir="$install_dir/tools/importer" --source_id="importerplugin"

# we tried this : _ynh_apply_default_permissions $install_dir/tools/importer
# but it is not working correctly
# so we do it like that :
chown -R ${app}:www-data $install_dir/tools/importer
chmod -R u=rwX,g=rX,o-rwx $install_dir/tools/importer
# do not fix it if it ain't broken ;-)

#=================================================
# DOWNLOAD AND CONFIGURE YUNOHOST PLUGIN
#=================================================
ynh_script_progression "Configure YunoHost plugin"

# Download YesWiki plugin from YesWiki repository
mkdir -p "$install_dir/tools/yunohost"
ynh_setup_source --dest_dir="$install_dir/tools/yunohost" --source_id="yunohostplugin"

# we tried this : _ynh_apply_default_permissions $install_dir/tools/yunohost
# but it is not working correctly
# so we do it like that :
chown -R ${app}:www-data $install_dir/tools/yunohost
chmod -R u=rwX,g=rX,o-rwx $install_dir/tools/yunohost
# do not fix it if it ain't broken ;-)

# Add config at the end of wakka.config.php
ynh_replace --match=");" --replace="  'dataSources' => [\n'yunohost-apps' => [\n'formId' => '5', // form id used in local bazar\n'lang' => 'fr',\n'importer' => 'YunohostCLIApp', // importer class name (without Importer suffix)\n],\n],\n);" --file="$install_dir/wakka.config.php"
SSO_DOMAIN=$(yunohost domain main-domain | sed -e 's/.*: //')
ynh_replace --match=");" --replace="  'yunohost_sso_domain' => '${SSO_DOMAIN}',\n);" --file="$install_dir/wakka.config.php"

# Ensure that scripts are executable
chmod +x $install_dir/tools/yunohost/private/scripts/*.sh

# Add app user in sudoers to authorize to launch YunoHost CLI commands without password
ynh_config_add --template="sudoers" --destination="/etc/sudoers.d/$app"
chown root:root /etc/sudoers.d/$app

# Add a post app install hook to sync the app importer
mkdir -p /etc/yunohost/hooks.d/post_app_install
chmod 700 /etc/yunohost/hooks.d/post_app_install
ynh_config_add --template="sync_app_importer.sh" --destination="/etc/yunohost/hooks.d/post_app_install/${app}_sync_app_importer.sh"
chown root:root /etc/yunohost/hooks.d/post_app_install/${app}_sync_app_importer.sh
chmod 700 /etc/yunohost/hooks.d/post_app_install/${app}_sync_app_importer.sh

# Add a post app remove hook to sync the app importer
mkdir -p /etc/yunohost/hooks.d/post_app_remove
chmod 700 /etc/yunohost/hooks.d/post_app_remove
ynh_config_add --template="sync_app_importer.sh" --destination="/etc/yunohost/hooks.d/post_app_remove/${app}_sync_app_importer.sh"
chown root:root /etc/yunohost/hooks.d/post_app_remove/${app}_sync_app_importer.sh
chmod 700 /etc/yunohost/hooks.d/post_app_remove/${app}_sync_app_importer.sh

# Add a post user create hook to sync the user importer
mkdir -p /etc/yunohost/hooks.d/post_user_create
chmod 700 /etc/yunohost/hooks.d/post_user_create
ynh_config_add --template="sync_user_importer.sh" --destination="/etc/yunohost/hooks.d/post_user_create/${app}_sync_user_importer.sh"
chown root:root /etc/yunohost/hooks.d/post_user_create/${app}_sync_user_importer.sh
chmod 700 /etc/yunohost/hooks.d/post_user_create/${app}_sync_user_importer.sh

# Add a post user delete hook to sync the user importer
mkdir -p /etc/yunohost/hooks.d/post_user_delete
chmod 700 /etc/yunohost/hooks.d/post_user_delete
ynh_config_add --template="sync_user_importer.sh" --destination="/etc/yunohost/hooks.d/post_user_delete/${app}_sync_user_importer.sh"
chown root:root /etc/yunohost/hooks.d/post_user_delete/${app}_sync_user_importer.sh
chmod 700 /etc/yunohost/hooks.d/post_user_delete/${app}_sync_user_importer.sh

# use the correct php version in yeswicli
ynh_replace --match="php " --replace="php${php_version} " --file="$install_dir/yeswicli"

# At last, run the YunoHost app importer
ynh_script_progression "Import YunoHost apps in bazar"
pushd $install_dir
ynh_exec_as_app ./yeswicli importer:sync -s yunohost-apps
popd

if [ "${authprovider}" = "YunoHost SSO" ]; then
  #=================================================
  # CONFIGURE YUNOHOST PLUGIN
  #=================================================
  ynh_script_progression "Enable YunoHost SSO"

  # Add config at the end of wakka.config.php
  ynh_replace --match=");" --replace="  'enable_yunohost_sso' => true,\n);" --file="$install_dir/wakka.config.php"
fi

if [ "${wikimodel}" = "CLIC" ]; then
  #=================================================
  # DOWNLOAD AND CONFIGURE FERME PLUGIN
  #=================================================
  ynh_script_progression "Configure ferme plugin"

  # Download ferme plugin from YesWiki repository
  mkdir -p "$install_dir/tools/ferme"
  ynh_setup_source --dest_dir="$install_dir/tools/ferme" --source_id="ferme"

  # we tried this : _ynh_apply_default_permissions $install_dir/tools/ferme
  # but it is not working correctly
  # so we do it like that :
  chown -R ${app}:www-data $install_dir/tools/ferme
  chmod -R u=rwX,g=rX,o-rwx $install_dir/tools/ferme
  # do not fix it if it ain't broken ;-)


  # copy CSS presets and files from CLIC
  cp -R ../source/CLIC/custom/* $install_dir/custom/
  cp -R ../source/CLIC/files/* $install_dir/files/

  # Update configuration
  ynh_replace --match=");" --replace="  'favorite_preset' => 'custom/clic.css',\n);" --file="$install_dir/wakka.config.php"
  ynh_replace --match=");" --replace="  'favicon' => 'files/faviconclic.png',\n);" --file="$install_dir/wakka.config.php"
fi

#=================================================
# RUN THE MIGRATIONS
#=================================================
pushd $install_dir
ynh_exec_as_app ./yeswicli migrate
popd

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
